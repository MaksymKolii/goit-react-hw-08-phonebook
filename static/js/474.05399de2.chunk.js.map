{"version":3,"file":"static/js/474.05399de2.chunk.js","mappings":"6MAAIA,E,iDCCSC,EAAUC,EAAAA,GAAAA,OAAH,oU,SCEPC,EAAS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,KAC3C,OACE,SAACL,EAAD,CAASK,KAAMA,EAAMC,QAASF,EAA9B,SACGD,GAGN,E,uCCPYI,EAAON,EAAAA,GAAAA,KAAH,2IAQJO,EAAQP,EAAAA,GAAAA,MAAH,+NAaLQ,EAAQR,EAAAA,GAAAA,MAAH,0QAcLC,EAASD,EAAAA,GAAAA,OAAH,oUAgBNS,EAAMT,EAAAA,GAAAA,IAAH,gF,oBClDHU,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAevBC,GAAyCC,EAAAA,EAAAA,IAAe,CAACP,EAXpC,SAAAC,GAAK,OAAIA,EAAMO,OAAOA,MAAjB,IAWoE,SAACN,EAAUM,GAAX,OAC3GN,EAASM,QAAO,qBAAEC,KAAeC,cAAcC,SAASH,EAAOE,cAA/C,GAD2F,I,oBCJ9FE,EAAc,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACtBX,GAAWY,EAAAA,EAAAA,IAAYd,GACvBe,GAAWC,EAAAA,EAAAA,MAQXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbV,KAAM,GACNW,OAAQ,IAIVC,iBAAkBC,EAAAA,KAAaC,MAAM,CACnCd,KAAMa,EAAAA,KAEHE,IAAI,GACJC,QAhBL,yHAgB4B,+BACvBC,IAAI,GAAI,iCACRC,SAAS,YACZP,OAAQE,EAAAA,KAELG,QAlBL,6EAkB6B,6BACxBE,SAAS,cAGdC,SAAS,WAAD,wBAAE,WAAOC,EAAP,yEAAiBC,WACL5B,EAAS6B,MAAK,YAAuB,IAApBtB,EAAmB,EAAnBA,KAAMW,EAAa,EAAbA,OACzC,OAAOX,IAASoB,EAAOpB,MAAQW,IAAWS,EAAOT,MAClD,IAHO,uBAMNY,EAAAA,OAAAA,KAAA,UAAeH,EAAOpB,KAAtB,4BANM,0BAYRM,GAASkB,EAAAA,EAAAA,YAAWJ,IAEpBG,EAAAA,OAAAA,QAAA,UAAkBH,EAAOpB,KAAzB,wCAEAI,IAhBQ,2CAAF,qDAAC,KAoBX,OACE,UAACjB,EAAD,CAAMgC,SAAUX,EAAOiB,aAAvB,WACE,UAACrC,EAAD,CAAOsC,QAAQ,OAAf,iBACO,KACL,SAACrC,EAAD,CACEsC,GAAG,OACH3B,KAAK,OACLf,KAAK,OACL2C,SAAUpB,EAAOqB,aACjBC,MAAOtB,EAAOY,OAAOpB,KACrB+B,YAAY,kBAIfvB,EAAOwB,QAAQhC,MAAQQ,EAAOyB,OAAOjC,MACpC,SAACV,EAAD,UAAMkB,EAAOyB,OAAOjC,OAClB,MACJ,UAACZ,EAAD,CAAOsC,QAAQ,SAAf,oBAEE,SAACrC,EAAD,CACEsC,GAAG,SACH3B,KAAK,SACLf,KAAK,OACL2C,SAAUpB,EAAOqB,aACjBC,MAAOtB,EAAOY,OAAOT,OACrBoB,YAAY,0BAIfvB,EAAOwB,QAAQrB,QAAUH,EAAOyB,OAAOtB,QACtC,SAACrB,EAAD,UAAMkB,EAAOyB,OAAOtB,SAClB,MACJ,SAAC,EAAD,CAAQ1B,KAAK,SAAb,+BAGL,E,UCpGYiD,EAAOrD,EAAAA,GAAAA,GAAH,0MAYJsD,EAAOtD,EAAAA,GAAAA,KAAH,kEAIJuD,EAAIvD,EAAAA,GAAAA,EAAH,+D,GAKQA,EAAAA,GAAAA,OAAH,6S,SCrBnB,EAA6B,+B,yBCGhBwD,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUpD,EAAb,EAAaA,QAAYqD,GAAzB,mBACxB,mCACEtD,KAAK,SACLuD,UAAWC,EACXvD,QAASA,GACLqD,GAJN,aAMGD,IAPqB,EA2B1BD,EAAWK,aAAe,CACxBxD,QAAS,kBAAM,IAAN,EACToD,SAAU,MR/BZ,IAAI,EAAY,CAAC,QAAS,WAE1B,SAASK,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,GAAU,CAAE,OAAOL,CAAQ,EAAUH,EAASY,MAAMC,KAAMR,UAAY,CAE5T,SAAS,EAAyBE,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,CAAC,EAAG,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,CAAC,EAAG,IAA2DC,EAAKJ,EAA5DD,EAAS,CAAC,EAAOY,EAAad,OAAOe,KAAKT,GAAqB,IAAKH,EAAI,EAAGA,EAAIW,EAAWT,OAAQF,IAAOI,EAAMO,EAAWX,GAAQU,EAASG,QAAQT,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,CAAQ,CAFhNe,CAA8BX,EAAQO,GAAuB,GAAIb,OAAOkB,sBAAuB,CAAE,IAAIC,EAAmBnB,OAAOkB,sBAAsBZ,GAAS,IAAKH,EAAI,EAAGA,EAAIgB,EAAiBd,OAAQF,IAAOI,EAAMY,EAAiBhB,GAAQU,EAASG,QAAQT,IAAQ,GAAkBP,OAAOQ,UAAUY,qBAAqBV,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,GAAQ,CAAE,OAAOL,CAAQ,CAM3e,SAASmB,EAAWC,EAAMC,GACxB,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQ,EAAyBJ,EAAM,GAE3C,OAAoB,gBAAoB,MAAOvB,EAAS,CACtD4B,KAAM,eACNC,MAAO,6BACPC,QAAS,YACTC,MAAO,OACPC,OAAQ,OACRC,IAAKT,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DzC,GAAI0C,GACHD,GAAS,KAAMzF,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3EkG,EAAG,wwBAEP,CAEA,I,qBAAIC,GAA0B,aAAiBb,G,IAChC,I,SSlBFc,GAAkB,SAAC,GAAyB,IAAvBpD,EAAsB,EAAtBA,GAAI3B,EAAkB,EAAlBA,KAAMW,EAAY,EAAZA,OACpCL,GAAWC,EAAAA,EAAAA,MAejB,OACE,UAAC2B,EAAD,YACE,SAACC,EAAD,WACE,SAAC,MAAD,CAAQnC,KAAMA,EAAMgF,KAAK,KAAKC,OAAO,OAGvC,UAAC7C,EAAD,oBACO,SAACD,EAAD,UAAOnC,QAEd,UAACoC,EAAD,4BACe,SAACD,EAAD,UAAOxB,QAMtB,SAAC0B,EAAD,CAAYnD,QAvBQ,WACtBoB,EAAS4E,EAAAA,cAAiCvD,IAC1CJ,EAAAA,OAAAA,QAAA,+BACD,EAoByC,aAAW,wFAAjD,UAEE,SAAC,GAAD,CAAYmD,MAAO,GAAIC,OAAQ,SAKtC,ECpDYQ,GAAStG,EAAAA,GAAAA,GAAH,+MCANM,GAAON,EAAAA,GAAAA,KAAH,2IAQJO,GAAQP,EAAAA,GAAAA,MAAH,+NAaLQ,GAAQR,EAAAA,GAAAA,MAAH,4QAcLC,GAASD,EAAAA,GAAAA,OAAH,sUCzBNuG,IDyCMvG,EAAAA,GAAAA,IAAH,kFCzCU,SAAC,GAAoC,IAAlCuB,EAAiC,EAAjCA,UAAWiF,EAAsB,EAAtBA,gBACtC,GAAwBC,EAAAA,EAAAA,UAASD,EAAgBrF,MAAjD,eAAOA,EAAP,KAAauF,EAAb,KACA,GAA2BD,EAAAA,EAAAA,UAASD,EAAgB1E,QAApD,eAAOA,EAAP,KAAe6E,EAAf,KACMlF,GAAWC,EAAAA,EAAAA,MAWXsB,EAAe,SAAC,GAAiC,IAAD,IAA9BiB,OAAU9C,EAAoB,EAApBA,KAAM8B,EAAc,EAAdA,MACtC,OAAQ9B,GACN,IAAK,OACHuF,EAAQzD,GAER,MACF,IAAK,SACH0D,EAAS1D,GAKd,EACD,OACE,UAAC,GAAD,CAAMX,SAvBa,SAAAsE,GACnBA,EAAEC,iBACFpF,GAASqF,EAAAA,EAAAA,gBAAc,kBAClBN,GADiB,IAEpBrF,KAAAA,EAAKW,OAAAA,MAEPP,GACD,EAgBC,WACE,UAAC,GAAD,kBACO,KACL,SAAC,GAAD,CACEuB,GAAG,OACH3B,KAAK,OACLf,KAAK,OACL2C,SAAUC,EACVC,MAAO9B,EACP+B,YAAY,mBAIhB,UAAC,GAAD,qBAEE,SAAC,GAAD,CACEJ,GAAG,SACH3B,KAAK,SACLf,KAAK,OACL2C,SAAUC,EACVC,MAAOnB,EACPoB,YAAY,2BAIhB,SAAC,GAAD,CAAQ9C,KAAK,SAAb,+BAGL,GCxDY2G,GAAe,WAC5B,OAA8CN,EAAAA,EAAAA,UAAS,MAAvD,eAAOD,EAAP,KAAwBQ,EAAxB,KACMpG,GAAWY,EAAAA,EAAAA,IAAYyF,GAOtB1F,EAAW,WAChByF,EAAmB,KACnB,EAEA,OACE,SAACV,GAAD,UACG1F,EAASsG,KAAI,SAAAC,GAAM,OAClB,4BACA,SAACjB,IAAD,UAAqCiB,GAAfA,EAAOrE,KAC7B,SAAC/C,EAAD,CAASM,QAAS,kBAdF,SAAC+G,GAErB,IAAMC,EAAQzG,EAAS6B,MAAK,gBAAEK,EAAF,EAAEA,GAAF,OAAQsE,IAAYtE,CAApB,IAC5BkE,EAAmBK,EACpB,CAU2BC,CAAeH,EAAOrE,GAA1B,EAAlB,yBACC0D,GAAmBA,EAAgB1D,KAAKqE,EAAOrE,KAAM,SAACyD,GAAD,CAAYC,gBAAiBA,EAAiBjF,UAAYA,MAHtG4F,EAAOrE,GADC,KAWzB,E,WCrCYyE,GAAcvH,EAAAA,GAAAA,IAAH,wECGXwH,GAAS,WACpB,OACE,SAAC,GAAD,WACE,SAAC,MAAD,CACE1B,OAAO,KACPD,MAAM,KACN4B,MAAM,UACNC,UAAU,mBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,KAIhB,E,iCCVYC,GAAS,WACpB,IAAMrG,GAAWC,EAAAA,EAAAA,MAcjB,OACE,SAAC,KAAD,CAAOqG,QAAS,EAAhB,UAGA,SAAC,GAAAC,EAAD,CAAO5H,KAAK,OAAOe,KAAK,SAAS+B,YAAY,wBAAuB2C,MAAM,QAAQ4B,MAAM,QACnFQ,QAAQ,yHACJ1C,MAAM,yIACPlD,UAAQ,EAENU,SArBI,SAACmF,GAEjB,IAAMC,EAAQD,EAAGjE,OAAOhB,MAEH,KAAjBkF,EAAMC,QACR1F,EAAAA,OAAAA,QAAA,6BAGFjB,GAAS4G,EAAAA,GAAAA,IAAUF,EAAMC,OAAOhH,eAC/B,KAmBF,ECrCYkH,GAAetI,EAAAA,GAAAA,QAAH,0JCCZuI,GAAU,SAAC,GAAkB,IAAhB9E,EAAe,EAAfA,SACxB,OAAO,SAAC6E,GAAD,UAAe7E,GACvB,ECkDD,GA3CkB,WAChB,OAAsCgD,EAAAA,EAAAA,WAAS,GAA/C,eAAO+B,EAAP,KAAoBC,EAApB,KACA,GAAoChC,EAAAA,EAAAA,WAAS,GAA7C,eAAOiC,EAAP,KAAoBC,EAApB,KACMlH,GAAWC,EAAAA,EAAAA,MACXX,GAAYS,EAAAA,EAAAA,IAAYV,GAc9B,OACE,+BACE,SAACyH,GAAD,UACGC,GACC,gCACGzH,IAAa,SAACyG,GAAD,KACZkB,IAAgB3H,IAChB,SAACd,EAAD,CAAQC,KAAK,cAAcC,aAdtB,WACfwI,GAAa,EACd,IAcUD,IAAe,SAACpH,EAAD,CAAaC,UAZrB,WAChBoH,GAAa,EACd,KAWS,SAACb,GAAD,KACA,SAACf,GAAD,QAGF,+BACE,SAAC9G,EAAD,CACEC,KAAK,gBACLC,aA7Ba,WACvBsI,GAAe,GACfhH,GAASmH,EAAAA,EAAAA,iBACV,SAiCF,C","sources":["Icons/delete2.svg","components/Button/Button.styled.js","components/Button/Button.jsx","components/ContactForm/ContactForm.styled.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.js","webpack://react-homework-template/./src/components/IconButton/IconButton.module.css?34f6","components/IconButton/IconButton.jsx","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactList.styled.js","components/UpdateForm/UpdateForm.styled.js","components/UpdateForm/UpdateForm.jsx","components/ContactsList/ContactsList.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/Filter/Filter.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","Pages/UsersPage/UsersPage.jsx"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDelete2(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"currentColor\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 26 26\",\n    width: \"26px\",\n    height: \"26px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 11 -0.03125 C 10.164063 -0.03125 9.34375 0.132813 8.75 0.71875 C 8.15625 1.304688 7.96875 2.136719 7.96875 3 L 4 3 C 3.449219 3 3 3.449219 3 4 L 2 4 L 2 6 L 24 6 L 24 4 L 23 4 C 23 3.449219 22.550781 3 22 3 L 18.03125 3 C 18.03125 2.136719 17.84375 1.304688 17.25 0.71875 C 16.65625 0.132813 15.835938 -0.03125 15 -0.03125 Z M 11 2.03125 L 15 2.03125 C 15.546875 2.03125 15.71875 2.160156 15.78125 2.21875 C 15.84375 2.277344 15.96875 2.441406 15.96875 3 L 10.03125 3 C 10.03125 2.441406 10.15625 2.277344 10.21875 2.21875 C 10.28125 2.160156 10.453125 2.03125 11 2.03125 Z M 4 7 L 4 23 C 4 24.652344 5.347656 26 7 26 L 19 26 C 20.652344 26 22 24.652344 22 23 L 22 7 Z M 8 10 L 10 10 L 10 22 L 8 22 Z M 12 10 L 14 10 L 14 22 L 12 22 Z M 16 10 L 18 10 L 18 22 L 16 22 Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDelete2);\nexport default __webpack_public_path__ + \"static/media/delete2.6ac30a81052620757f53e86cd23deec2.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nexport const ButtonB = styled.button`\n  min-width: 150px;\n  padding: 10px;\n  margin-top: 25px;\n  font-size: 16px;\n  font-weight: 600;\n  border-radius: 5px;\n  background-color: #e9e9e9;\n  color: #3a383d;\n  transition: background-color 250ms linear;\n  &:hover,\n  &:focus {\n    background-color: #188ce8;\n    color: white;\n  }\n`;\n","import css from './Button.module.css';\nimport {  ButtonB } from './Button.styled';\n\nexport const Button = ({ text, clickHandler, type }) => {\n  return (\n    <ButtonB type={type} onClick={clickHandler}>\n      {text}\n    </ButtonB>\n  );\n};\n\nexport const IButton = ({ children, clickHandler, ...allyProps }) => (\n  <button\n    type=\"button\"\n    className={css.IButton}\n    onClick={clickHandler}\n    {...allyProps}\n  >\n    {children}\n  </button>\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 300px;\n  border: 2px solid black;\n  border-radius: 5px;\n  margin: 30px auto 0 auto;\n  padding: 20px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 10px;\n  font-size: 22px;\n  font-weight: 500;\n  color: black;\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  padding: 10px 0 10px 10px;\n  border: 1px solid #d3b0f7;\n  border-radius: 4px;\n  outline: none;\n  font-size: 16px;\n  color: black;\n  transition: border-color 250ms linear;\n  &:focus {\n    border-color: tomato;\n  }\n`;\n\nexport const Button = styled.button`\n  min-width: 150px;\n  padding: 10px;\n  margin-top: 25px;\n  font-size: 16px;\n  font-weight: 600;\n  border-radius: 5px;\n  background-color: #e9e9e9;\n  color: #3a383d;\n  transition: background-color 250ms linear;\n  &:hover,\n  &:focus {\n    background-color: #188ce8;\n    color: white;\n  }\n`;\nexport const Div = styled.div`\n  font-size: 16px;\n  font-weight: 400;\n  color: red;\n`;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\n//* contacts идет из store - contacts: contactsReducer, а items идет из contactsSlice -  items: [],\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectStatusFilter = state => state.filter.filter;\n\n// export const selectContactsOptions = state => {\n//   const contacts = selectContacts(state);\n//   const filterInput = selectStatusFilter(state);\n//   const getFilteredContacts = contacts.filter(contact =>\n//     contact.name.toLowerCase().includes(filterInput.toLowerCase())\n//   );\n//   return filterInput ? getFilteredContacts : contacts;\n// };\n\nexport const selectContactsOptionsWithCreateReduser = createSelector([selectContacts, selectStatusFilter], (contacts, filter) =>\ncontacts.filter(({name}) => name.toLowerCase().includes(filter.toLowerCase()))\n\n)","import React from 'react';\nimport { useFormik } from 'formik';\nimport { Form, Label, Input, Div, Button } from './ContactForm.styled';\n// import { Button } from 'components/Button/Button';\n// import { nanoid } from 'nanoid';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n// import { getYesNoStatus } from 'components/services/yesNoApl';\n\nimport PropTypes from 'prop-types';\nimport * as yup from 'yup';\n\n// import { addContact } from 'redux/contacts/contactsSlice';\n\nexport const ContactForm = ({ closeForm }) => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const nameTemplates =\n    /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\n  const phoneTemplates =\n    /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      number: '',\n      // status: '',\n    },\n\n    validationSchema: yup.object().shape({\n      name: yup\n        .string()\n        .min(3)\n        .matches(nameTemplates, 'Invalid first, or last name')\n        .max(35, 'Must be 35 characters or less')\n        .required('Required'),\n      number: yup\n        .string()\n        .matches(phoneTemplates, 'Phone number is not valid')\n        .required('Required'),\n    }),\n\n    onSubmit: async (values, { resetForm }) => {\n      const isNameExist = contacts.find(({ name, number }) => {\n        return name === values.name || number === values.number;\n      });\n\n      if (isNameExist) {\n        Notify.info(`${values.name} is alredy in contacts!`);\n        return;\n      }\n      // const stat = await getYesNoStatus();\n      // values.status = stat;\n\n      dispatch(addContact(values));\n\n      Notify.success(`${values.name} was successfully added to contacts`);\n      // resetForm();\n      closeForm();\n    },\n  });\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <Label htmlFor=\"Name\">\n        Name{' '}\n        <Input\n          id=\"name\"\n          name=\"name\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.name}\n          placeholder=\"Enter name\"\n        />\n      </Label>\n\n      {formik.touched.name && formik.errors.name ? (\n        <Div>{formik.errors.name}</Div>\n      ) : null}\n      <Label htmlFor=\"Number\">\n        Number\n        <Input\n          id=\"number\"\n          name=\"number\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.number}\n          placeholder=\"Enter phone number\"\n        />\n      </Label>\n\n      {formik.touched.number && formik.errors.number ? (\n        <Div>{formik.errors.number}</Div>\n      ) : null}\n      <Button type=\"submit\">Press to submit</Button>\n    </Form>\n  );\n};\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onSubmit: PropTypes.func,\n};\n","import styled from 'styled-components';\nexport const List = styled.li`\n  display: flex;\n  justify-content: space-between;\n\n  align-items: center;\n  border: 1px solid #ccc;\n  padding: 4px 0;\n  :not(:last-child) {\n    margin-bottom: 7px;\n  }\n`;\n\nexport const Span = styled.span`\n  margin-left: 2px;\n  font-weight: 600;\n`;\nexport const P = styled.p`\n  margin: 0 6px;\n  font-weight: 500;\n`;\n\nexport const Button = styled.button`\n  min-width: 80px;\n  padding: 5px;\n  font-size: 16px;\n  font-weight: 400;\n  border-radius: 5px;\n  background-color: #e9e9e9;\n  color: #3a383d;\n  transition: background-color 250ms linear;\n  &:hover,\n  &:focus {\n    background-color: #188ce8;\n    color: white;\n  }\n`;\n","// extracted by mini-css-extract-plugin\nexport default {\"IconButton\":\"IconButton_IconButton__r-hpi\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './IconButton.module.css';\n\nexport const IconButton = ({ children, onClick, ...allyProps }) => (\n  <button\n    type=\"button\"\n    className={css.IconButton}\n    onClick={onClick}\n    {...allyProps}\n  >\n    {children}\n  </button>\n);\n\n//* Сделал Классом - работает\n// export class IconButton extends Component {\n//   render() {\n//     return (\n//       <button\n//         type=\"button\"\n//         className={css.IconButton}\n//         onClick={this.props.onClick}\n//         aria-label={this.props.ariaLabel}\n//       >\n//         {this.props.children}\n//       </button>\n//     );\n//   }\n// }\n\nIconButton.defaultProps = {\n  onClick: () => null,\n  children: null,\n};\nIconButton.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { Span, P, List } from './ContactItem.styled';\n\n// import { deleteContact } from '../../redux/contacts/contacts-operations';\nimport { contactsOperations } from 'redux/contacts';\nimport { IconButton } from '../IconButton/IconButton';\n// import { Button } from './ContactItem.styled';\n// import { UpdateForm } from 'components/UpdateForm/UpdateForm';\n\nimport { ReactComponent as DeleteIcon } from 'Icons/delete2.svg';\nimport { useDispatch } from 'react-redux';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport Avatar from 'react-avatar';\n\nexport const ContactListItem = ({ id, name, number}) => {\n  const dispatch = useDispatch();\n\n  // const timeReduser = data => {\n  //   const year = data.slice(0, 10);\n  //   const time = data.slice(11, 19);\n  //   return year + '  ' + time;\n  // };\n\n  const onDeleteContact = () => {\n    dispatch(contactsOperations.deleteContact(id));\n    Notify.success(`Contact successfully removed`);\n  };\n\n\n\n  return (\n    <List>\n      <Span>\n        <Avatar name={name} size=\"35\" round={true} />\n      </Span>\n\n      <P>\n        Name:<Span>{name}</Span>\n      </P>\n      <P>\n        Phone number:<Span>{number}</Span>\n      </P>\n      {/* <P>\n        Created:<Span>{timeReduser(createdAt)}</Span>\n      </P> */}\n\n      <IconButton onClick={onDeleteContact} aria-label=\"Удалить контакт\">\n        {/* {isDeleting && <LoaderRings />} */}\n        <DeleteIcon width={20} height={20}></DeleteIcon>\n      </IconButton>\n    \n    </List>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const ListUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: baseline;\n  margin-right: auto;\n  margin-left: auto;\n  gap: 10px;\n  margin-top: 15px;\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 300px;\n  border: 2px solid black;\n  border-radius: 5px;\n  margin: 30px auto 0 auto;\n  padding: 20px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 10px;\n  font-size: 22px;\n  font-weight: 500;\n  color: black;\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  padding: 10px 0 10px 10px;\n  border: 1px solid #d3b0f7;\n  border-radius: 4px;\n  outline: none;\n  font-size: 16px;\n  color: black;\n  transition: border-color 250ms linear;\n  &:focus {\n    border-color: tomato;\n  }\n`;\n\nexport const Button = styled.button`\n  min-width: 150px;\n  padding: 10px;\n  margin-top: 25px;\n  font-size: 16px;\n  font-weight: 600;\n  border-radius: 5px;\n  background-color: #e9e9e9;\n  color: #3a383d;\n  transition: background-color 250ms linear;\n  &:hover,\n  &:focus {\n    background-color: #188ce8;\n    color: white;\n  }\n`;\nexport const Div = styled.div`\n  font-size: 16px;\n  font-weight: 400;\n  color: red;\n`;\n","import React from 'react';\n// import { useFormik } from 'formik';\nimport { Form, Label, Input, Button } from './UpdateForm.styled';\nimport { useState } from 'react';\nimport {  useDispatch } from 'react-redux';\nimport { updateContact } from 'redux/contacts/contacts-operations';\n// import { selectContacts } from 'redux/contacts/contacts-selectors';\n// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport PropTypes from 'prop-types';\n// import * as yup from 'yup';\n\nexport const UpdateForm = ({ closeForm, contactToUpdate }) => {\n  const [name, setName] = useState(contactToUpdate.name);\n  const [number, setPhone] = useState(contactToUpdate.number);\n  const dispatch = useDispatch()\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(updateContact({\n      ...contactToUpdate,\n      name,number\n    }))\n    closeForm();\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n\n        break;\n      case 'number':\n        setPhone(value);\n        break\n      default:\n        break;\n    }\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name{' '}\n        <Input\n          id=\"name\"\n          name=\"name\"\n          type=\"text\"\n          onChange={handleChange}\n          value={name}\n          placeholder=\"Enter name\"\n        />\n      </Label>\n\n      <Label>\n        Number\n        <Input\n          id=\"number\"\n          name=\"number\"\n          type=\"text\"\n          onChange={handleChange}\n          value={number}\n          placeholder=\"Enter phone number\"\n        />\n      </Label>\n\n      <Button type=\"submit\">Press to submit</Button>\n    </Form>\n  );\n};\n\n\nUpdateForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onSubmit: PropTypes.func,\n};\n","import { useSelector} from 'react-redux';\nimport { ContactListItem } from '../ContactItem/ContactItem';\nimport { ListUl } from './ContactList.styled';\nimport { ButtonB } from '../Button/Button.styled';\nimport { UpdateForm } from 'components/UpdateForm/UpdateForm';\nimport { useState } from 'react';\n\n// import {selectContactsOptions} from'../../redux/contacts/contacts-selectors'\n//* re export\nimport { contactsSelectors } from 'redux/contacts';\n\n\nexport const ContactsList = () => {\nconst [contactToUpdate, setContactToUpdate] = useState(null)\nconst contacts = useSelector(contactsSelectors.selectContactsOptionsWithCreateReduser);\n\n  const showUpdateForm =(contactId)=>{\n\n    const contact=contacts.find(({id})=>contactId===id)\n    setContactToUpdate(contact)\n  }\n const closeForm =()=>{\n  setContactToUpdate(null)\n }\n \n  return (\n    <ListUl>\n      {contacts.map(option => (\n        <div key={option.id} >  \n        <ContactListItem key={option.id} {...option} />\n        <ButtonB onClick={()=>showUpdateForm(option.id)}>Update User</ButtonB>\n        {contactToUpdate && contactToUpdate.id===option.id && <UpdateForm contactToUpdate={contactToUpdate} closeForm ={closeForm}/>}\n        </div>\n      \n      ))}\n     \n    </ListUl>\n  );\n};\n","import styled from 'styled-components';\nexport const LoaderClass = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { Triangle, Rings } from 'react-loader-spinner';\n\nimport { LoaderClass } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderClass>\n      <Triangle\n        height=\"80\"\n        width=\"80\"\n        color=\"#4fa94d\"\n        ariaLabel=\"triangle-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </LoaderClass>\n  );\n};\n\nexport const LoaderRings = () => {\n  return (\n    <LoaderClass>\n      <Rings\n        height=\"80\"\n        width=\"80\"\n        color=\"#4fa94d\"\n        radius=\"6\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"rings-loading\"\n      />\n    </LoaderClass>\n  );\n};\n","import { React } from 'react';\n// import { Label, Input } from './Filter.styled';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport PropTypes from 'prop-types';\nimport { setFilter } from '../../redux/filter/filterSlice';\nimport { useDispatch } from 'react-redux';\nimport { Input,Stack } from '@chakra-ui/react';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChange =(ev)=>{\n   \n  const check = ev.target.value;\n\n  if (check.trim() === '') {\n    Notify.warning(`You didn't put anything !`);\n   \n  }\n  dispatch(setFilter(check.trim().toLowerCase()))\n  }\n \n\n  return (\n    <Stack spacing={4}>\n  {/* <InputGroup>  */}\n    {/* <InputLeftAddon children='+234' /> */}\n    <Input type='text' name=\"filter\" placeholder='Find contacts by name'width='25rem' color='black'\n         pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n             title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n              // onChange={ev => dispatch(setFilter(ev.target.value.toLowerCase()))} \n              onChange={onChange} \n              />\n  {/* </InputGroup> */}\n\n</Stack>\n\n  );\n};\n\nFilter.propTypes = {\n  onChange: PropTypes.func,\n  // value: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const SectionClass = styled.section`\n  padding-top: 25px;\n  padding-left: 40px;\n  padding-bottom: 25px;\n  text-align: center;\n  /* background-color: tomato; */\n`;\n","import PropTypes from 'prop-types';\nimport { SectionClass } from './Section.styled';\n\nexport const Section = ({ children }) => {\n  return <SectionClass>{children}</SectionClass>;\n};\nSection.propTypes = {\n  children: PropTypes.node,\n};\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button } from '../../components/Button/Button'\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { fetchContacts } from '../../redux/contacts/contacts-operations';\nimport { ContactsList } from '../../components/ContactsList/ContactsList';\nimport { selectIsLoading } from '../../redux/contacts/contacts-selectors';\nimport { Loader } from '../../components/Loader/Loader';\nimport { Filter } from '../../components/Filter/Filter';\nimport { Section } from '../../components/Section/Section';\n\n\nconst UsersPage = () => {\n  const [isListShown, setIsListShown] = useState(false);\n  const [isFormShown, setFormShown] = useState(false);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const showContactsList = () => {\n    setIsListShown(true);\n    dispatch(fetchContacts());\n  };\n\n  const showForm = () => {\n    setFormShown(true);\n  };\n\n  const closeForm = () => {\n    setFormShown(false);\n  };\n  return (\n    <>\n      <Section>\n        {isListShown ? (\n          <>\n            {isLoading && <Loader />}\n            {!isFormShown && !isLoading && (\n              <Button text=\"Add contact\" clickHandler={showForm}></Button>\n            )}\n            {isFormShown && <ContactForm closeForm={closeForm} />}\n            <Filter />\n            <ContactsList />\n          </>\n        ) : (\n          <>\n            <Button\n              text=\"Show contacts\"\n              clickHandler={showContactsList}\n            ></Button>\n          </>\n        )}\n      </Section>\n    </>\n  );\n};\nexport default UsersPage"],"names":["_path","ButtonB","styled","Button","text","clickHandler","type","onClick","Form","Label","Input","Div","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectContactsOptionsWithCreateReduser","createSelector","filter","name","toLowerCase","includes","ContactForm","closeForm","useSelector","dispatch","useDispatch","formik","useFormik","initialValues","number","validationSchema","yup","shape","min","matches","max","required","onSubmit","values","resetForm","find","Notify","addContact","handleSubmit","htmlFor","id","onChange","handleChange","value","placeholder","touched","errors","List","Span","P","IconButton","children","allyProps","className","css","defaultProps","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgDelete2","_ref","svgRef","title","titleId","props","fill","xmlns","viewBox","width","height","ref","d","ForwardRef","ContactListItem","size","round","contactsOperations","ListUl","UpdateForm","contactToUpdate","useState","setName","setPhone","e","preventDefault","updateContact","ContactsList","setContactToUpdate","contactsSelectors","map","option","contactId","contact","showUpdateForm","LoaderClass","Loader","color","ariaLabel","wrapperStyle","wrapperClassName","visible","Filter","spacing","I","pattern","ev","check","trim","setFilter","SectionClass","Section","isListShown","setIsListShown","isFormShown","setFormShown","fetchContacts"],"sourceRoot":""}