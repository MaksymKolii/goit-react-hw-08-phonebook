{"version":3,"file":"static/js/132.622d6c2f.chunk.js","mappings":"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","sources":["Icons/delete2.svg","components/Button/Button.jsx","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.js","webpack://react-homework-template/./src/components/IconButton/IconButton.module.css?34f6","components/IconButton/IconButton.jsx","components/ContactItem/ContactItem.jsx","components/UpdateForm/UpdateForm.styled.js","components/UpdateForm/UpdateForm.jsx","components/ContactsList/ContactsList.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/Filter/Filter.jsx","Pages/UsersPage/UsersPage.jsx","components/ContactForm/ContactForm.styled.js"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDelete2(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"currentColor\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 26 26\",\n    width: \"26px\",\n    height: \"26px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 11 -0.03125 C 10.164063 -0.03125 9.34375 0.132813 8.75 0.71875 C 8.15625 1.304688 7.96875 2.136719 7.96875 3 L 4 3 C 3.449219 3 3 3.449219 3 4 L 2 4 L 2 6 L 24 6 L 24 4 L 23 4 C 23 3.449219 22.550781 3 22 3 L 18.03125 3 C 18.03125 2.136719 17.84375 1.304688 17.25 0.71875 C 16.65625 0.132813 15.835938 -0.03125 15 -0.03125 Z M 11 2.03125 L 15 2.03125 C 15.546875 2.03125 15.71875 2.160156 15.78125 2.21875 C 15.84375 2.277344 15.96875 2.441406 15.96875 3 L 10.03125 3 C 10.03125 2.441406 10.15625 2.277344 10.21875 2.21875 C 10.28125 2.160156 10.453125 2.03125 11 2.03125 Z M 4 7 L 4 23 C 4 24.652344 5.347656 26 7 26 L 19 26 C 20.652344 26 22 24.652344 22 23 L 22 7 Z M 8 10 L 10 10 L 10 22 L 8 22 Z M 12 10 L 14 10 L 14 22 L 12 22 Z M 16 10 L 18 10 L 18 22 L 16 22 Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDelete2);\nexport default __webpack_public_path__ + \"static/media/delete2.6ac30a81052620757f53e86cd23deec2.svg\";\nexport { ForwardRef as ReactComponent };","// import css from './Button.module.css';\nimport {  ButtonB } from './Button.styled';\n\nexport const Button = ({ text, clickHandler, type }) => {\n  return (\n    <ButtonB type={type} onClick={clickHandler}>\n      {text}\n    </ButtonB>\n  );\n};\n\n// export const IButton = ({ children, clickHandler, ...allyProps }) => (\n//   <button\n//     type=\"button\"\n//     className={css.IButton}\n//     onClick={clickHandler}\n//     {...allyProps}\n//   >\n//     {children}\n//   </button>\n// );\n","import { createSelector } from \"@reduxjs/toolkit\";\n\n//* contacts идет из store - contacts: contactsReducer, а items идет из contactsSlice -  items: [],\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectStatusFilter = state => state.filter.filter;\n\n// export const selectContactsOptions = state => {\n//   const contacts = selectContacts(state);\n//   const filterInput = selectStatusFilter(state);\n//   const getFilteredContacts = contacts.filter(contact =>\n//     contact.name.toLowerCase().includes(filterInput.toLowerCase())\n//   );\n//   return filterInput ? getFilteredContacts : contacts;\n// };\n\nexport const selectContactsOptionsWithCreateReduser = createSelector([selectContacts, selectStatusFilter], (contacts, filter) =>\ncontacts.filter(({name}) => name.toLowerCase().includes(filter.toLowerCase()))\n\n)","import React from 'react';\nimport { useFormik } from 'formik';\nimport { Form, Label, Input, Div , Button} from './ContactForm.styled';\n// import { Button } from 'components/Button/Button';\n// import { nanoid } from 'nanoid';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n// import { getYesNoStatus } from 'components/services/yesNoApl';\n// import Button from '@mui/material/Button';\n// import Stack from '@mui/material/Stack';\n\nimport PropTypes from 'prop-types';\nimport * as yup from 'yup';\n\n// import { addContact } from 'redux/contacts/contactsSlice';\n\nexport const ContactForm = ({ closeForm }) => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const nameTemplates =\n    /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\n  const phoneTemplates =\n    /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      number: '',\n      // status: '',\n    },\n\n    validationSchema: yup.object().shape({\n      name: yup\n        .string()\n        .min(3)\n        .matches(nameTemplates, 'Invalid first, or last name')\n        .max(35, 'Must be 35 characters or less')\n        .required('Required'),\n      number: yup\n        .string()\n        .matches(phoneTemplates, 'Phone number is not valid')\n        .required('Required'),\n    }),\n\n    onSubmit: async (values, { resetForm }) => {\n      const isNameExist = contacts.find(({ name, number }) => {\n        return name === values.name || number === values.number;\n      });\n\n      if (isNameExist) {\n        Notify.info(`${values.name} is alredy in contacts!`);\n        return;\n      }\n      // const stat = await getYesNoStatus();\n      // values.status = stat;\n\n      dispatch(addContact(values));\n\n      Notify.success(`${values.name} was successfully added to contacts`);\n      // resetForm();\n      closeForm();\n    },\n  });\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <Label htmlFor=\"Name\">\n        Name{' '}\n        <Input\n          id=\"name\"\n          name=\"name\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.name}\n          placeholder=\"Enter name\"\n        />\n      </Label>\n\n      {formik.touched.name && formik.errors.name ? (\n        <Div>{formik.errors.name}</Div>\n      ) : null}\n      <Label htmlFor=\"Number\">\n        Number\n        <Input\n          id=\"number\"\n          name=\"number\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.number}\n          placeholder=\"Enter phone number\"\n        />\n      </Label>\n\n      {formik.touched.number && formik.errors.number ? (\n        <Div>{formik.errors.number}</Div>\n      ) : null}\n      <Button type=\"submit\">Press to submit</Button>\n    </Form>\n  );\n};\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onSubmit: PropTypes.func,\n};\n","import styled from 'styled-components';\nexport const List = styled.li`\n  display: flex;\n  justify-content: space-between;\n\n  align-items: center;\n  border: 1px solid #ccc;\n  padding: 4px 0;\n  :not(:last-child) {\n    margin-bottom: 7px;\n  }\n`;\n\nexport const Span = styled.span`\n  margin-left: 2px;\n  font-weight: 600;\n`;\nexport const P = styled.p`\n  margin: 0 6px;\n  font-weight: 500;\n`;\n\nexport const Button = styled.button`\n  min-width: 80px;\n  padding: 5px;\n  font-size: 16px;\n  font-weight: 400;\n  border-radius: 5px;\n  background-color: #e9e9e9;\n  color: #3a383d;\n  transition: background-color 250ms linear;\n  &:hover,\n  &:focus {\n    background-color: #188ce8;\n    color: white;\n  }\n`;\n","// extracted by mini-css-extract-plugin\nexport default {\"IconButton\":\"IconButton_IconButton__r-hpi\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './IconButton.module.css';\n\nexport const IconButton = ({ children, onClick, ...allyProps }) => (\n  <button\n    type=\"button\"\n    className={css.IconButton}\n    onClick={onClick}\n    {...allyProps}\n  >\n    {children}\n  </button>\n);\n\n//* Сделал Классом - работает\n// export class IconButton extends Component {\n//   render() {\n//     return (\n//       <button\n//         type=\"button\"\n//         className={css.IconButton}\n//         onClick={this.props.onClick}\n//         aria-label={this.props.ariaLabel}\n//       >\n//         {this.props.children}\n//       </button>\n//     );\n//   }\n// }\n\nIconButton.defaultProps = {\n  onClick: () => null,\n  children: null,\n};\nIconButton.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { Span, P} from './ContactItem.styled';\nimport { contactsOperations } from 'redux/contacts';\nimport { IconButton } from '../IconButton/IconButton';\n\nimport { ReactComponent as DeleteIcon } from 'Icons/delete2.svg';\nimport { useDispatch } from 'react-redux';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport Avatar from 'react-avatar';\nimport Box from '@mui/material/Box';\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n\n  const onDeleteContact = () => {\n    dispatch(contactsOperations.deleteContact(id));\n    Notify.success(`Contact successfully removed`);\n  };\n\n  return (\n    <>\n      <Box sx={{ display: 'flex', justifyContent: 'start',  alignItems :'center',mb:'0.5rem'}}>\n      \n        <Span>\n          <Avatar name={name} size=\"35\" round={true} />\n        </Span>\n        <P>\n          Name:<Span>{name}</Span>\n        </P>\n        </Box>\n        <Box sx={{ display: 'flex', justifyContent: 'start',  alignItems :'center'  }}>\n        <P>\n          Phone number:<Span>{number}</Span>\n        </P>\n      \n      <IconButton onClick={onDeleteContact} aria-label=\"Удалить контакт\">\n        {/* {isDeleting && <LoaderRings />} */}\n        <DeleteIcon width={20} height={20}></DeleteIcon>\n      </IconButton>\n      </Box>\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 300px;\n  border: 2px solid black;\n  border-radius: 5px;\n  margin: 30px auto 0 auto;\n  padding: 20px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 10px;\n  font-size: 22px;\n  font-weight: 500;\n  color: black;\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  padding: 10px 0 10px 10px;\n  border: 1px solid #d3b0f7;\n  border-radius: 4px;\n  outline: none;\n  font-size: 16px;\n  color: black;\n  transition: border-color 250ms linear;\n  &:focus {\n    border-color: tomato;\n  }\n`;\n\nexport const Button = styled.button`\n  min-width: 150px;\n  padding: 10px;\n  margin-top: 25px;\n  font-size: 16px;\n  font-weight: 600;\n  border-radius: 5px;\n  background-color: #e9e9e9;\n  color: #3a383d;\n  transition: background-color 250ms linear;\n  &:hover,\n  &:focus {\n    background-color: #188ce8;\n    color: white;\n  }\n`;\nexport const Div = styled.div`\n  font-size: 16px;\n  font-weight: 400;\n  color: red;\n`;\n","import React from 'react';\n// import { useFormik } from 'formik';\nimport { Form, Label, Input, Button } from './UpdateForm.styled';\nimport { useState } from 'react';\nimport {  useDispatch } from 'react-redux';\nimport { updateContact } from 'redux/contacts/contacts-operations';\n// import { selectContacts } from 'redux/contacts/contacts-selectors';\n// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport PropTypes from 'prop-types';\n// import * as yup from 'yup';\n\nexport const UpdateForm = ({ closeForm, contactToUpdate }) => {\n  const [name, setName] = useState(contactToUpdate.name);\n  const [number, setPhone] = useState(contactToUpdate.number);\n  const dispatch = useDispatch()\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(updateContact({\n      ...contactToUpdate,\n      name,number\n    }))\n    closeForm();\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n\n        break;\n      case 'number':\n        setPhone(value);\n        break\n      default:\n        break;\n    }\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name{' '}\n        <Input\n          id=\"name\"\n          name=\"name\"\n          type=\"text\"\n          onChange={handleChange}\n          value={name}\n          placeholder=\"Enter name\"\n        />\n      </Label>\n\n      <Label>\n        Number\n        <Input\n          id=\"number\"\n          name=\"number\"\n          type=\"text\"\n          onChange={handleChange}\n          value={number}\n          placeholder=\"Enter phone number\"\n        />\n      </Label>\n\n      <Button type=\"submit\">Press to submit</Button>\n    </Form>\n  );\n};\n\n\nUpdateForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onSubmit: PropTypes.func,\n};\n","import { useSelector } from 'react-redux';\nimport { ContactListItem } from '../ContactItem/ContactItem';\n\nimport { ButtonB } from '../Button/Button.styled';\nimport { UpdateForm } from 'components/UpdateForm/UpdateForm';\nimport { useState } from 'react';\n\n\n//* re export\nimport { contactsSelectors } from 'redux/contacts';\n\nimport Grid from '@mui/material/Grid';\n// import Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\n\nexport const ContactsList = () => {\n  const [contactToUpdate, setContactToUpdate] = useState(null);\n  const contacts = useSelector(\n    contactsSelectors.selectContactsOptionsWithCreateReduser\n  );\n\n  const showUpdateForm = contactId => {\n    const contact = contacts.find(({ id }) => contactId === id);\n    setContactToUpdate(contact);\n  };\n  const closeForm = () => {\n    setContactToUpdate(null);\n  };\n// border:'2px solid red'\n  return (\n    <Box sx={{ width: '100%'}}>\n      <Grid\n        container\n        spacing={{ xs: 2, md: 3 }}\n        columns={{ xs: 4, sm: 8, md: 12 }}\n      >\n        {contacts.map(option => (\n          <Grid item xs={2} sm={4} md={4} key={option.id} >\n            <Box sx={{bgcolor:' rgb(48, 64, 64)',padding:'5px', color:'rgb(76, 181, 245)', borderRadius:'6px'}}  boxShadow={3}><ContactListItem key={option.id} {...option} />\n            <ButtonB onClick={() => showUpdateForm(option.id)}>\n              Update User\n            </ButtonB>\n            {contactToUpdate && contactToUpdate.id === option.id && (\n              <UpdateForm\n                contactToUpdate={contactToUpdate}\n                closeForm={closeForm}\n              />\n            )}</Box>\n            \n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n};\n","import styled from 'styled-components';\nexport const LoaderClass = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { Triangle, Rings } from 'react-loader-spinner';\n\nimport { LoaderClass } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderClass>\n      <Triangle\n        height=\"80\"\n        width=\"80\"\n        color=\"#4fa94d\"\n        ariaLabel=\"triangle-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </LoaderClass>\n  );\n};\n\nexport const LoaderRings = () => {\n  return (\n    <LoaderClass>\n      <Rings\n        height=\"80\"\n        width=\"80\"\n        color=\"#4fa94d\"\n        radius=\"6\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"rings-loading\"\n      />\n    </LoaderClass>\n  );\n};\n","import { React } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport PropTypes from 'prop-types';\nimport { setFilter } from '../../redux/filter/filterSlice';\nimport { useDispatch } from 'react-redux';\nimport { Box } from '@mui/material';\nimport TextField from '@mui/material/TextField';\n// import Input from '@mui/material/Input';\n\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      // Purple and green play nicely together.\n      main: 'rgb(76, 181, 245)',\n      darker: '#053e85',\n    },\n    secondary: {\n      // This is green.A700 as hex.\n      main: '#11cb5f',\n    },\n\n    custom: {\n      light: '#ffa726',\n      main: '#f57c00',\n      dark: '#ef6c00',\n      contrastText: 'rgba(0, 0, 0, 0.87)',\n    },\n  },\n});\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChange = ev => {\n    const check = ev.target.value;\n\n    if (check.trim() === '') {\n      Notify.warning(`You didn't put anything !`);\n    }\n    dispatch(setFilter(check.trim().toLowerCase()));\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box\n        component=\"form\"\n        sx={{\n          '& > :not(style)': { m: 1, width: '25ch'  },\n          color:''\n        }}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <TextField\n          id=\"standard-basic\"\n          label=\"Find contact by name\"\n          variant=\"standard\"\n          onChange={onChange}\n          sx={{ input: { color: 'rgb(76, 181, 245)' },label:{color:'rgb(76, 181, 245)'} }}\n        >\n        </TextField>\n      </Box>\n    </ThemeProvider>\n  );\n};\n\nFilter.propTypes = {\n  onChange: PropTypes.func,\n  // value: PropTypes.string,\n};\n\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button } from '../../components/Button/Button';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { fetchContacts } from '../../redux/contacts/contacts-operations';\nimport { ContactsList } from '../../components/ContactsList/ContactsList';\nimport { selectIsLoading } from '../../redux/contacts/contacts-selectors';\nimport { Loader } from '../../components/Loader/Loader';\nimport { Filter } from '../../components/Filter/Filter';\n// import { Section } from '../../components/Section/Section';\nimport Box from '@mui/material/Box';\n\nconst UsersPage = () => {\n  const [isListShown, setIsListShown] = useState(false);\n  const [isFormShown, setFormShown] = useState(false);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const showContactsList = () => {\n    setIsListShown(true);\n    dispatch(fetchContacts());\n  };\n\n  const showForm = () => {\n    setFormShown(true);\n  };\n\n  const closeForm = () => {\n    setFormShown(false);\n  };\n  return (\n    <>\n      {/* <Section> */}\n      {isListShown ? (\n        <>\n          <Box sx={{ display: 'flex', justifyContent: 'space-evenly',mb:'35px', mt:'35px' }}>\n          \n            {isLoading && <Loader />}\n            {!isFormShown && !isLoading && (\n              <Button text=\"Add contact\" clickHandler={showForm}></Button>\n            )}\n            {isFormShown && <ContactForm closeForm={closeForm} />}\n            <Filter />\n          </Box>\n\n          <ContactsList />\n        </>\n      ) : (\n        <>\n          <Button text=\"Show contacts\" clickHandler={showContactsList}></Button>\n        </>\n      )}\n      {/* </Section> */}\n    </>\n  );\n};\nexport default UsersPage;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 300px;\n  border: 2px solid black;\n  border-radius: 5px;\n  background-color:rgb(48, 64, 64);\n  margin: 30px auto 0 auto;\n  padding: 20px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 10px;\n  font-size: 22px;\n  font-weight: 500;\n  color: black;\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  padding: 10px 0 10px 10px;\n  border: 1px solid #d3b0f7;\n  border-radius: 4px;\n  outline: none;\n  font-size: 16px;\n  color: black;\n  transition: border-color 250ms linear;\n  &:focus {\n    border-color: tomato;\n  }\n`;\n\nexport const Button = styled.button`\n  min-width: 150px;\n  padding: 10px;\n  margin-top: 25px;\n  font-size: 16px;\n  font-weight: 600;\n  border-radius: 5px;\n  background-color: #e9e9e9;\n  color: #3a383d;\n  transition: background-color 250ms linear;\n  &:hover,\n  &:focus {\n    background-color: #188ce8;\n    color: white;\n  }\n`;\nexport const Div = styled.div`\n  font-size: 16px;\n  font-weight: 400;\n  color: red;\n`;\n"],"names":["_path","Button","text","clickHandler","type","onClick","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectContactsOptionsWithCreateReduser","createSelector","filter","name","toLowerCase","includes","ContactForm","closeForm","useSelector","dispatch","useDispatch","formik","useFormik","initialValues","number","validationSchema","yup","shape","min","matches","max","required","onSubmit","values","resetForm","find","Notify","addContact","handleSubmit","htmlFor","id","onChange","handleChange","value","placeholder","touched","errors","Span","styled","P","IconButton","children","allyProps","className","css","defaultProps","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgDelete2","_ref","svgRef","title","titleId","props","fill","xmlns","viewBox","width","height","ref","d","ForwardRef","ContactListItem","Box","sx","display","justifyContent","alignItems","mb","size","round","contactsOperations","Form","Label","Input","UpdateForm","contactToUpdate","useState","setName","setPhone","e","preventDefault","updateContact","ContactsList","setContactToUpdate","contactsSelectors","Grid","container","spacing","xs","md","columns","sm","map","option","item","bgcolor","padding","color","borderRadius","boxShadow","contactId","contact","showUpdateForm","LoaderClass","Loader","ariaLabel","wrapperStyle","wrapperClassName","visible","theme","createTheme","palette","primary","main","darker","secondary","custom","light","dark","contrastText","Filter","ThemeProvider","component","m","noValidate","autoComplete","TextField","label","variant","ev","check","trim","setFilter","input","isListShown","setIsListShown","isFormShown","setFormShown","mt","fetchContacts","Div"],"sourceRoot":""}